import Head from 'next/head'
import Image from 'next/image'
import Banner from '../components/banner'
import styles from '../styles/Home.module.css'
import Card from '../components/card'
import { fetchCoffeeStores } from '../lib/coffee-stores'
import useTrackLocation from '../hooks/use-track-location'
import { useState,useEffect, useContext} from 'react'
import { ACTION_TYPES, StoreContext } from '../hooks/context'


export async function getStaticProps(context) {
  console.log("hi getStaticProps")
  const coffeeStores = await fetchCoffeeStores() 

 
  return {
    props: {
      coffeeStores: coffeeStores 

    }
  }

}

export default function Home(props) {

  console.log("props", props);

  const {handleTrackLocation,locationErrorMsg,isFindingLocation} = useTrackLocation()
  // console.log({latLong})
  // console.log({locationErrorMsg})

  // const [nearCoffeeStore,setNearCoffeeStore] = useState("")


  const fetchdata = async () =>{
    if(latLong){
      try{
        const response = await fetch(`/api/getCoffeeStoresByLocation?latLong=${latLong}&limit=9`)
        console.log("fetched data",{response})
        // setNearCoffeeStore(fetchedCoffeeStores)

        const coffeeStores = await response.json()
        dispatch({
          type:ACTION_TYPES.SET_COFFEE_STORES,
            payload:{
              coffeeStores:coffeeStores
            }
        })
        
      }
      catch(error){
        console.log({error})
      }
    }
  }

  const {dispatch,state} = useContext(StoreContext)

  const {coffeeStores,latLong} = state;

  useEffect(()=>{
    fetchdata()
  },[latLong])

  const handleOnBannerButtonClick = () => {
    handleTrackLocation()
    console.log("banner button")
  }

  return (
    <div className={styles.container}>
      <Head>
        <title>Coffee Connoisseur</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>


      <main className={styles.main}>

        <Banner buttonText={isFindingLocation? "Locating...":"View stores nearby"} handleOnClick={handleOnBannerButtonClick} />
        {locationErrorMsg && <p>Something went wrong: {locationErrorMsg}</p>}
        <div className={styles.heroImage}>
          <Image alt="hero-image" src="/static/hero-image.png" width={700} height={400}></Image>
        </div>
        
        {coffeeStores.length > 0 &&
          <div className={styles.sectionWrapper}>
            <h2 className={styles.heading2}> Stores Near Me</h2>
            <div className={styles.cardLayout}>
              {coffeeStores.map((coffeeStore) => {
                return (
                  <div>
                  <Card key={coffeeStore.fsq_id} className={styles.card} name={coffeeStore.name} src={coffeeStore.imgUrl || "https://images.unsplash.com/photo-1504753793650-d4a2b783c15e?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1900&q=80"} href={`/coffee-store/${coffeeStore.fsq_id}`} />
                  </div>
                )
              })}
            </div>
          </div>
        }

        {props.coffeeStores.length > 0 &&
          <div className={styles.sectionWrapper}>
            <h2 className={styles.heading2}>Toronto Stores</h2>
            <div className={styles.cardLayout}>
              {props.coffeeStores.map((coffeeStore) => {
                return (
                  <Card key={coffeeStore.fsq_id} className={styles.card} name={coffeeStore.name} src={coffeeStore.imgUrl || "https://images.unsplash.com/photo-1504753793650-d4a2b783c15e?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=2000&q=80"} href={`/coffee-store/${coffeeStore.fsq_id}`} />

                )
              })}
            </div>
          </div>
        }
      </main>
    </div>
  )
}
